{
  "name": "ASEO BLOG Generator",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -128,
        208
      ],
      "id": "9390dc5c-2384-43c3-8c73-eaee36e333d0",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "toolDescription": "Tavily SERP Results Tool",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "query",
              "valueProvider": "fieldValue",
              "value": "={{ $json.Keyword }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        704,
        1152
      ],
      "id": "d4a912ce-0aee-4ddf-8b07-082838de48c5",
      "name": "Tavily search results"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cc01dbf-7718-49ae-a463-c0e848a78cc6",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "7dbd7d60-2454-47ee-b02a-3ffddd588009",
              "name": "Title",
              "value": "={{ $json.Title }}",
              "type": "string"
            },
            {
              "id": "bf205dfc-ce10-40fe-b868-0bebd4de3d33",
              "name": "Description",
              "value": "={{ $json.Description }}",
              "type": "string"
            },
            {
              "id": "ccce37af-f230-4d5d-bf74-9e69d965be08",
              "name": "Keyword",
              "value": "={{ $json.Keyword }}",
              "type": "string"
            },
            {
              "id": "d6a7041c-3ba3-4b69-962e-640413863784",
              "name": "Guidelines",
              "value": "=Adhere to the Brand Guidelines as you generate the content:\n{{ $('Aggregate').first().json.data[0].Name }}\n{{ $('Aggregate').first().json.data[0].Content }}\n{{ $('Aggregate').first().json.data[1].Name }}\n{{ $('Aggregate').first().json.data[1].Content }}\n{{ $('Aggregate').first().json.data[2].Name }}\n{{ $('Aggregate').first().json.data[2].Content }}\n{{ $('Aggregate').first().json.data[3].Name }}\n{{ $('Aggregate').first().json.data[3].Content }}\n{{ $('Aggregate').first().json.data[4].Name }}\n{{ $('Aggregate').first().json.data[4].Content }}\n{{ $('Aggregate').first().json.data[5].Name }}\n{{ $('Aggregate').first().json.data[5].Content }}\n{{ $('Aggregate').first().json.data[6].Name }}\n{{ $('Aggregate').first().json.data[6].Content }}\n{{ $('Aggregate').first().json.data[7].Name }}\n{{ $('Aggregate').first().json.data[7].Content }}\n{{ $('Aggregate').first().json.data[8].Name }}\n{{ $('Aggregate').first().json.data[8].Content }}\n{{ $('Aggregate').first().json.data[9].Name }}\n{{ $('Aggregate').first().json.data[9].Content }}\n{{ $('Aggregate').first().json.data[10].Name }}\n{{ $('Aggregate').first().json.data[10].Content }}\n{{ $('Aggregate').first().json.data[11].Name }}\n{{ $('Aggregate').first().json.data[11].Content }}\n{{ $('Aggregate').first().json.data[12].Name }}\n{{ $('Aggregate').first().json.data[12].Content }}\n{{ $('Aggregate').first().json.data[13].Name }}\n{{ $('Aggregate').first().json.data[13].Content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1152,
        480
      ],
      "id": "dee5a2eb-9b25-42f2-81d2-14d1e7249ddd",
      "name": "Set Airtable Fields for Agents"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7e444c83-3d2b-4bd3-a23b-6fb5ca68e670",
              "name": "writing_style",
              "value": "={{ $json.output.parseJson().writing_style }}",
              "type": "string"
            },
            {
              "id": "e16b5d65-587d-49d8-af5d-4ff1930633a8",
              "name": "writing_tone",
              "value": "={{ $json.output.parseJson().writing_tone }}",
              "type": "string"
            },
            {
              "id": "ab756373-0186-454a-8e98-d5a5f96cba87",
              "name": "search_intent",
              "value": "={{ $json.output.parseJson().search_intent }}",
              "type": "string"
            },
            {
              "id": "a14b7657-038a-4b08-911d-314336261a0c",
              "name": "hidden_insight",
              "value": "={{ $json.output.parseJson().hidden_insight }}",
              "type": "string"
            },
            {
              "id": "19ef4221-5a5d-4321-8a07-4e04f5dcaf44",
              "name": "target_audience",
              "value": "={{ $json.output.parseJson().target_audience }}",
              "type": "string"
            },
            {
              "id": "0ab17e84-4a2e-4df3-b0a3-91e9ce26cb72",
              "name": "article_goal",
              "value": "={{ $json.output.parseJson().goal_of_article }}",
              "type": "string"
            },
            {
              "id": "84e7f6a4-48b2-43b2-92cc-7e0337311661",
              "name": "semantic_analysis",
              "value": "={{ $json.output.parseJson().semantic_analysis }}",
              "type": "string"
            },
            {
              "id": "5e943a46-bb03-438d-b6da-2a6ec414f5af",
              "name": "keywords",
              "value": "={{ $json.output.parseJson().keywords }}",
              "type": "string"
            },
            {
              "id": "bba0e7a7-dc1a-4907-9b96-178f967d7a9c",
              "name": "keywords_secondary",
              "value": "={{ $json.output.parseJson().keywords.secondary_keywords }}",
              "type": "string"
            },
            {
              "id": "4e6259f9-1744-496e-ae22-2b36823c6071",
              "name": "keywords_semantic",
              "value": "={{ $json.output.parseJson().keywords.semantic_keywords }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        928,
        960
      ],
      "id": "cf829c29-edf7-47f7-9707-3625ba00ab68",
      "name": "Set KWs and Insights fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Revise the blog post title. Consider:\nPrimary Keyword: {{ $('Set Airtable Fields for Agents').item.json.Keyword }}\nWorking title: {{ $('Set Airtable Fields for Agents').item.json.Title }}\nSearch intent: {{ $('Set KWs and Insights fields').item.json.search_intent }}\nSemantic analysis: {{ $('Set KWs and Insights fields').item.json.semantic_analysis }}\nSecondary keywords: {{ $('Set KWs and Insights fields').item.json.keywords }}\nWriting style: {{ $('Set KWs and Insights fields').item.json.writing_style }}\nWriting tone: {{ $('Set KWs and Insights fields').item.json.writing_tone }}\nArticle goal: {{ $('Set KWs and Insights fields').item.json.article_goal }}\n\n\nOutput only JSON\nIMPORTANT: Do not add extra spaces, extra characters or include any additional text.\n",
        "options": {
          "systemMessage": "=You are an expert in crafting highly engaging, SEO-optimized article titles that drive clicks and rank well in search engines. \n\nYour goal is to refine the **initial working title** into a **clear, compelling, and search-friendly title** that aligns with:\n- **Primary and Secondary Keywords** → Ensure relevance for search engines.\n- **Search Intent** → Match the intent behind the keyword (informational, transactional, navigational, or commercial).\n- **Common Subtopics & Related Questions** → Reflect what users want to learn.\n- **Writing Style & Tone** → Ensure consistency with the article's voice.\n- **Click-Worthiness** → Make the title engaging and appealing for readers.\n\n### **Your Task:**\n1. **Analyze the given input data**, including the working title, primary keyword, and supporting data.\n2. **Refine the title** to be more **SEO-friendly, engaging, and aligned with search intent**.\n3. **Incorporate relevant keywords naturally**, without keyword stuffing.\n4. **Ensure clarity and readability**—avoid overly complex or vague titles.\n5. **Return only the final refined title as a plain text string.**\n\n---\n### **Title Guidelines:**\n- Keep it **between 50-60 characters** (ideal for SEO).\n- Use **power words** or numbers when appropriate (e.g., \"10 Proven Ways,\" \"Ultimate Guide\").\n- Avoid unnecessary words or fluff.\n- Ensure it **reads naturally** and **appeals to human curiosity**.\n\n---\n### **Example Inputs & Outputs:**\n\n#### **Example 1**\n**Working Title:** \"Understanding AI Automation for Businesses\"  \n**Primary Keyword:** \"AI automation for small businesses\"  \n**Search Intent:** Informational  \n**Refined Title Output:** **AI Automation for Small Businesses: How to Save Time & Boost Revenue**\n\n---\n#### **Example 2**\n**Working Title:** \"The Best Winter Gear for Cyclists\"  \n**Primary Keyword:** \"best winter gear for cyclists\"  \n**Search Intent:** Commercial  \n**Refined Title Output:** **Best Winter Cycling Gear: Stay Warm & Ride Safely in Cold Weather**\n\n---\n### **Output Format:**\nReturn the refined title in standard JSON. Do not include triple ''' or extra line breaks or spaces.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1392,
        960
      ],
      "id": "3ffa9feb-f4a1-4638-9cb0-9293a7654776",
      "name": "Refine the Title"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eafbe44d-f811-4660-9f89-0ebe61febdcc",
              "name": "key_takeaways",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2608,
        960
      ],
      "id": "4faf442c-a726-474b-848d-86f8deecc4d2",
      "name": "Set Key Takeaways"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create Key Takeaways using:\n\n- **Title**: {{ $('Sets New Title Field').item.json.new_title }}\nPrimary Keyword: {{ $('Set Airtable Fields for Agents').item.json.Keyword }}\nTitle: {{ $('Set Airtable Fields for Agents').item.json.Title }}\nHidden Insight: {{ $json.fields['Hidden Insight'] }}\nSearch intent: {{ $('Set KWs and Insights fields').item.json.search_intent }}\nSemantic analysis: {{ $('Set KWs and Insights fields').item.json.semantic_analysis }}\nSecondary keywords: {{ $('Set KWs and Insights fields').item.json.keywords }}\nWriting style: {{ $('Set KWs and Insights fields').item.json.writing_style }}\nWriting tone: {{ $('Set KWs and Insights fields').item.json.writing_tone }}\nArticle goal: {{ $('Set KWs and Insights fields').item.json.article_goal }}\n\n\n\n",
        "options": {
          "systemMessage": "=You are an expert content strategist specializing in crafting structured, insightful, and engaging **key takeaways** for articles. Your goal is to summarize the most important information while ensuring the takeaways are **concise, impactful, and easy to digest**.\n\n### **Your Task:**\n1. **Generate an introductory paragraph** that sets up the key takeaways and provides context for the reader.\n2. **Extract the most valuable takeaways** from the provided data:\n   - **Key concepts** covered in the article.\n   - **Relevant semantic subtopics** that align with the topic.\n   - **Hidden insights** (if applicable) that add unique value.\n3. **Format each takeaway in Markdown** as:\n[Action-driven bolded heading]: Concise explanation inline.\n- The **bolded heading** should be **engaging and impactful** (not generic).  \n- The **explanation should be concise and inline with the heading**.  \n- **No section headers, extra spaces, or dividers**.  \n4. **Ensure takeaways provide substantial knowledge** but are not overwhelming:\n- If the **hidden insight** adds value, incorporate it as a **dedicated takeaway** or **enhance an existing one**.\n- If the **hidden insight does not fit naturally**, exclude it.\n5. **Write an outro paragraph** that smoothly leads into the main body of the article.\n\n### **Formatting & Style Guidelines**\n✅ **Use Markdown for formatting**  \n✅ **Bullet points with inline bolded headings**  \n✅ **No extra section headers, dividers, or spaces**  \n✅ **Use engaging, action-driven takeaway headers** (e.g., \"Beyond fixed rules: AI adapts in real time\" instead of \"A paradigm shift from traditional automation\")  \n✅ **Ensure takeaways are concise yet informative**  \n\n### **Example Inputs & Outputs**\n---\n#### **Input Example**\n**Article Title:** `\"AI Automation for Small Businesses: How to Save Time & Boost Revenue\"`  \n**Primary Keyword:** `\"AI automation for small businesses\"`  \n**Hidden Insight:** `\"Most AI automation content focuses on efficiency, but a major benefit is reducing decision fatigue.\"`  \n**Common Subtopics:** `[\"What is AI automation?\", \"How small businesses can use AI\", \"Best AI tools for automation\"]`\n\n---\n#### **Output Example**\n```markdown\nAI automation is transforming small businesses by optimizing workflows, improving efficiency, and enhancing decision-making. Below are the key takeaways highlighting its potential.\n\n- **AI enables true autonomy through adaptive learning:** Unlike traditional systems, AI learns and evolves over time, reducing human supervision by refining its decision-making processes independently.  \n- **Beyond fixed rules: AI adapts in real time:** Traditional AI follows static rules, whereas AI-driven automation dynamically adjusts to changing environments, solving complex, unsupervised tasks.  \n- **AI agents optimize complex workflows effortlessly:** These intelligent systems manage intricate processes with greater efficiency, improving operations like customer support, supply chain management, and fraud detection.  \n- **Seamless integration into business operations:** AI integrates with existing systems like CRMs and ERP platforms, allowing businesses to modernize workflows without overhauling infrastructure.  \n- **Scalability without added complexity:** AI systems manage process complexity and expand capabilities, enabling businesses to scale efficiently without requiring proportional increases in resources.  \n- **AI minimizes decision fatigue, maximizing human focus:** By handling routine and complex decisions autonomously, AI reduces cognitive load on human teams, allowing them to focus on high-value tasks.  \n- **AI ensures resilience through continuous optimization:** Through machine learning, AI refines its models over time, ensuring consistent performance even in dynamic and unpredictable environments.  \n- **AI innovation transforming industries:** Sectors like manufacturing, healthcare, and finance leverage AI for predictive maintenance, personalized care, and risk assessment.  \n\nAI-driven automation offers a new frontier for workflow innovation by replacing static rule-based automation with intelligent, adaptive systems. In the sections ahead, we’ll explore its core components, industry applications, and strategies for seamless business integration.\n\nOutput Format:\nReturn the final takeaways in Markdown format, structured as:\n\nIntro paragraph\nBullet points with inline bolded headings and concise explanations\nOutro paragraph\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        2208,
        960
      ],
      "id": "772123c7-3c5d-49e4-aee6-316d4402a9e5",
      "name": "Key Takeaways AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe43bcff-a163-4cac-aca8-cf97241b834b",
              "name": "introduction",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3184,
        960
      ],
      "id": "e5344215-c196-4ec7-bffd-cbfcabadc232",
      "name": "Set Introduction Field"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Generate a detailed outline for a blog post with the following details:\n\n- **Title**: {{ $('Sets New Title Field').item.json.new_title }}\n- **Key Takeaways**: {{ $('Set Key Takeaways').item.json.key_takeaways }}\n- **Introduction**: {{ $json.introduction }}\nPrimary Keyword: {{ $('Set Airtable Fields for Agents').item.json.Keyword }}\nTitle: {{ $('Set Airtable Fields for Agents').item.json.Title }}\nSearch intent: {{ $('Set KWs and Insights fields').item.json.search_intent }}\nSemantic analysis: {{ $('Set KWs and Insights fields').item.json.semantic_analysis }}\nSecondary keywords: {{ $('Set KWs and Insights fields').item.json.keywords }}\nWriting style: {{ $('Set KWs and Insights fields').item.json.writing_style }}\nWriting tone: {{ $('Set KWs and Insights fields').item.json.writing_tone }}\nArticle goal: {{ $('Set KWs and Insights fields').item.json.article_goal }}\n\nFormatting Instructions:\n\nOutput must be in Markdown format and structured correctly.\nDo NOT add any commentary, explanations, or extra text about what the agent did.\nDo NOT include dividers (---), line breaks (\\n), or unnecessary whitespace.\nOnly return the required Markdown content—nothing more.\n",
        "options": {
          "systemMessage": "You are an expert content strategist specializing in structuring articles for clarity, engagement, and SEO effectiveness. Your goal is to generate a **detailed, logical outline** that ensures a smooth reading experience and maximizes content relevance.\n\n### **Your Task:**\n1. **Analyze the provided inputs**, including the article title, primary keyword, key takeaways, semantic analysis, secondary keywords, and hidden insights (if applicable).\n2. **Generate an optimized outline** by:\n   - Structuring the article with a **clear hierarchy of sections**.\n   - Aligning with **SEO best practices** and **user intent**.\n   - Ensuring **logical progression** from start to finish.\n   - Incorporating **hidden insights** if they enhance the content.\n   - **Using secondary keywords and semantic elements (common subtopics & related questions) naturally in headings/subheadings** for SEO.\n3. **Ensure the outline includes:**\n   - **Main sections covering key aspects of the topic**\n   - **Logical sub-sections** that break down complex ideas\n4. **The article title, introduction, and conclusion should be used as references but NOT included in the outline.**\n5. **Format the output in Markdown**:\n   - Use `##` for main sections.\n   - Use `###` for subsections.\n   - Avoid unnecessary headings—keep sections focused and purposeful.\n\n### **Formatting & Style Guidelines**\n✅ **Use Markdown formatting.**  \n✅ **Ensure a logical, structured progression from start to finish.**  \n✅ **Incorporate hidden insights if they enhance the outline.**  \n✅ **Use secondary keywords and semantic elements naturally in headings.**  \n✅ **Exclude the article title, introduction, and conclusion from the final outline.**  \n✅ **Use concise but descriptive section explanations.**  \n\n### **Example Inputs & Outputs**\n---\n#### **Input Example**\n**Article Title:** `\"AI Automation for Small Businesses: How to Save Time & Boost Revenue\"`  \n**Primary Keyword:** `\"AI automation for small businesses\"`  \n**Secondary Keywords:** `[\"AI workflow automation\", \"small business AI tools\", \"automating business operations\"]`  \n**Key Takeaways:** `[\"AI automation reduces decision fatigue.\", \"It improves operational efficiency and workflow management.\", \"Small businesses can implement AI affordably.\"]`  \n**Hidden Insight:** `\"Most discussions on AI automation focus on efficiency, but its real impact is on business adaptability—helping companies pivot faster in changing markets.\"`  \n**Semantic Analysis:**  \n- **Common Subtopics:** `[\"What is AI automation?\", \"How small businesses can use AI\", \"Best AI tools for automation\"]`  \n- **Related Questions:** `[\"What are the best AI automation tools for small businesses?\", \"How does AI improve small business efficiency?\"]`  \n\n---\n#### **Output Example** markdown\n## What is AI Automation?  \n### Understanding AI-powered business automation *(Secondary Keyword Applied)*  \n- Definition of AI automation and its key components.  \n- How AI-powered automation differs from traditional workflow automation.  \n\n### Why small businesses need AI workflow automation *(Semantic & SEO Applied)*  \n- How AI helps small businesses optimize time and improve operations.  \n- Examples of industries benefiting from AI-driven efficiency.  \n\n## Key Benefits of AI in Small Business Operations  \n### Reducing decision fatigue in business owners *(Key Takeaway Applied)*  \n- How AI automation minimizes repetitive decision-making.  \n- Freeing up business owners to focus on strategy and innovation.  \n\n### Boosting efficiency with small business AI tools *(Secondary Keyword Applied)*  \n- The role of AI in automating workflows, customer interactions, and task management.  \n- How automation tools improve productivity.  \n\n### Improving business adaptability with AI *(Hidden Insight Applied)*  \n- How AI enables businesses to pivot quickly in response to market changes.  \n- Case studies on AI-driven adaptability.  \n\n## Implementing AI for Small Business Growth  \n### Choosing the best AI automation tools *(Semantic & SEO Applied)*  \n- Factors to consider when selecting AI-powered solutions.  \n- Overview of top AI tools for small businesses.  \n\n### Automating business operations without disrupting workflows *(Secondary Keyword Applied)*  \n- Best practices for integrating AI seamlessly into existing processes.  \n- How to ensure a smooth transition without disrupting operations.  \n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        3392,
        960
      ],
      "id": "499d9631-ded0-40c2-a1f5-ad327950acb9",
      "name": "Outline Agent"
    },
    {
      "parameters": {
        "model": "gpt-4o-2024-11-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        3392,
        1152
      ],
      "id": "aa9d73ce-d5e7-4ff2-979b-025787257dba",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5b6a40be-b640-4caf-a531-50a45df07be8",
              "name": "outline",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3744,
        960
      ],
      "id": "c0079327-1172-4591-a7b1-9d950ff1c78b",
      "name": "Set Outline Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "options": {
          "systemMessage": "=You are an AI writing agent responsible for generating only the main body of an article based on a structured prompt. Your writing must be well-formatted in Markdown, insightful, logically structured, and engaging for the target audience.\n\nGuidelines\n✅ Follow the provided prompt exactly. Ensure adherence to the user-provided outline and structure.\n✅ Format the article in Markdown using:\n\nH2 (##) for main sections\nH3 (###) for subsections\nBullet points (-), numbered lists (1. 2. 3.), and bold formatting (**bold text**) where necessary.\n✅ Ensure smooth transitions between sections.\nEnd sections with a transition sentence that leads into the next topic.\nAvoid abrupt shifts—maintain logical flow.\n✅ Enhance depth with real-world case studies.\nProvide measurable outcomes (e.g., \"A 20% efficiency gain led to $5M in annual savings\").\nDetail implementation challenges, solutions, and business results.\n✅ Balance readability with a mix of paragraphs & lists.\nUse bullet points sparingly—convert them into mini-paragraphs where needed.\nLists should highlight key takeaways, not dominate sections.\n✅ Ensure keyword optimization.\nNaturally integrate primary and secondary keywords within the article.\nAvoid overuse—prioritize readability over keyword stuffing.\n✅ Fact-driven & logically structured.\nAvoid redundant explanations—each section should introduce new insights.\nEnsure distinctions between related topics (e.g., “Managing Complexity” should not repeat “Adaptive Learning”).\n✅ No introduction or conclusion.\nFocus only on the main body sections based on the structured prompt.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        4320,
        960
      ],
      "id": "1633d165-f398-4bce-9011-5b4acf0c2691",
      "name": "Content Writer Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write an engaging introduction for a blog post with the following details:\n\n- **Title**: {{ $('Sets New Title Field').item.json.new_title }}\n- **Key Takeaways**: {{ $json.key_takeaways }} \nPrimary Keyword: {{ $('Set Airtable Fields for Agents').item.json.Keyword }}\nTitle: {{ $('Set Airtable Fields for Agents').item.json.Title }}\nSearch intent: {{ $('Set KWs and Insights fields').item.json.search_intent }}\nSemantic analysis: {{ $('Set KWs and Insights fields').item.json.semantic_analysis }}\nSecondary keywords: {{ $('Set KWs and Insights fields').item.json.keywords }}\nWriting style: {{ $('Set KWs and Insights fields').item.json.writing_style }}\nWriting tone: {{ $('Set KWs and Insights fields').item.json.writing_tone }}\nArticle goal: {{ $('Set KWs and Insights fields').item.json.article_goal }}\n\n\nThe introduction should:\n- Hook the reader with a surprising fact, question, or statement.\n- Explain why the topic matters and how it benefits the reader.\n- Transition naturally into the body of the article.\n- Use keywords naturally but sparingly.\n\nExample Introduction:\nImagine having an extra pair of hands to handle your business's repetitive tasks while you focus on the big picture—growing your company. It might sound like a luxury, but AI agents are making it a reality for small businesses everywhere.\n\nSmall business owners often juggle countless responsibilities, from managing operations to engaging customers. AI agents provide a way to streamline routine tasks, improve productivity, and even elevate customer experiences, all while saving time and resources.\n\nThis article dives into how AI agents can transform your business, helping you scale operations, save time, and stay competitive. Whether you’re seeking efficiency or growth, you’ll discover how this powerful technology can work for you.\n\nFormatting Instructions:\n\nOutput must be in Markdown format and structured correctly.\nDo NOT add any commentary, explanations, or extra text about what the agent did.\nDo NOT include dividers (---), line breaks (\\n), or unnecessary whitespace.\nOnly return the required Markdown content—nothing more.",
        "options": {
          "systemMessage": "=You are an expert content writer specializing in crafting compelling introductions for articles. Your goal is to **hook the reader, set expectations, and establish relevance** while maintaining clarity and engagement.\n\n### **Your Task:**\n1. **Analyze the provided inputs**, including the article title, primary keyword, key takeaways, and target audience.\n2. **Write a compelling introduction** that:\n   - **Opens with a direct, concise statement** that immediately presents the topic.\n   - **Avoids generic phrases** like *\"In today’s fast-paced world...\"* or *\"Businesses are constantly evolving...\"*.\n   - **Clearly states the article’s purpose** and what the reader will learn.\n   - **Flows naturally into the main body** without being overly long.\n3. **Match the article’s writing style and tone** to ensure consistency.\n4. **Incorporate the primary keyword naturally** for SEO without forcing it.\n5. **Ensure readability and engagement**:\n   - Keep the introduction concise (2-3 short paragraphs).\n   - Avoid fluff—make every sentence valuable.\n   - **Use streamlined transition sentences** (e.g., *\"Let’s explore how...\"* instead of *\"In this article, we will explore...\"*).\n\n### **Formatting & Style Guidelines**\n✅ **Use Markdown formatting.**  \n✅ **Start with a direct, engaging opening sentence.**  \n✅ **Avoid generic phrases or overused business clichés.**  \n✅ **Keep it concise yet informative (2-3 short paragraphs).**  \n✅ **Ensure a smooth transition into the main body.**  \n✅ **Maintain a natural, compelling flow that matches the writing tone & style.**  \n\n### **Example Inputs & Outputs**\n---\n#### **Input Example**\n**Article Title:** `\"AI Automation for Small Businesses: How to Save Time & Boost Revenue\"`  \n**Primary Keyword:** `\"AI automation for small businesses\"`  \n**Key Takeaways:** `[\"AI automation reduces decision fatigue.\", \"It improves operational efficiency and workflow management.\", \"Small businesses can implement AI affordably.\"]`  \n**Writing Style:** `\"Engaging and storytelling\"`  \n**Writing Tone:** `\"Friendly and conversational\"`  \n\n---\n#### **Output Example** markdown\nTraditional automation is falling behind in today’s fast-moving business world. Enter agentic AI automation—a transformative technology that redefines efficiency and decision-making by enabling systems to think, learn, and act autonomously. Unlike static rule-based systems, these intelligent automation solutions continuously adapt and optimize without constant human intervention.  \n\nFor businesses, this means more than just convenience; it’s the promise of streamlined operations, scalable solutions, and reduced cognitive load for teams. From managing intricate workflows to integrating seamlessly with existing tools, agentic AI bridges the gap between innovation and practicality.  \n\nLet’s explore how agentic AI is revolutionizing industries, boosting productivity, and setting a new benchmark for intelligent automation.  \n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        2848,
        960
      ],
      "id": "2eb79600-2b3e-40c5-82cf-fda87131f46f",
      "name": "Introduction Agent"
    },
    {
      "parameters": {
        "model": "gpt-4o-2024-11-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        4864,
        1152
      ],
      "id": "730975d7-9aba-4b6d-9e03-78f5752fa818",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Assemble the article from the following components into a single cohesive output formatted in Markdown:\n\n- **Key Takeaways**: {{ $('Set Key Takeaways').item.json.key_takeaways }}\n- **Introduction**: {{ $('Introduction Agent').item.json.output }}\n- **Main Content**: {{ $('Edit Fields1').item.json['main body'] }}\n- **Conclusion**: {{ $json.conclusion }}\n\n### Output Format:\n- Use `##` for main section headings like Key Takeaways, Introduction, and Conclusion.\n- Use `##` for primary headings (H2s) in the main content.\n- Use `###` for subheadings (H3s) under those primary headings.\n- Format lists as bulleted lists using `-`.\n- Write paragraphs in plain text, separated by line breaks.\n\nExample Output:\n\n## Key Takeaways\n- AI automation reduces costs and improves efficiency for SMBs.\n- Examples show how AI streamlines workflows and enhances customer service.\n- Step-by-step advice helps SMBs adopt AI effectively.\n\n## Introduction\nAI automation is a transformative tool for small businesses, offering improved efficiency, cost reduction, and scalability.\n\n## How Intelligent Process Automation Works\nIntelligent process automation (IPA) isn’t just about speed—it’s about working smarter.\n\n### Reducing Manual Work and Process Errors with Automation\nAutomating manual tasks like payroll processing slashes error rates by up to 90%.\n\n### Boosting Process Efficiency Across Business Functions\nFrom HR to sales, IPA ensures consistency and efficiency.\n\n## Conclusion\nAI automation is a pathway to transforming how small businesses operate and grow. By streamlining workflows, enhancing customer experiences, and enabling smarter decision-making, AI empowers businesses to achieve more with less effort.\n\n\n",
        "options": {
          "systemMessage": "You are an expert content assembler. Your task is to take separate elements of an article—key takeaways, introduction, main content (including subheadings), and conclusion—and assemble them into a single cohesive output. The final output should be formatted in Markdown for a CMS blog post field.\n\nGuidelines:\n\n1. Use `##` for section headings (Key Takeaways, Introduction, and Conclusion).\n2. Use `##` for primary headings (H2s) from the main content.\n3. Use `###` for subheadings (H3s) under those primary headings.\n4. Write paragraphs as plain text, separated by line breaks.\n5. Ensure the output is clean and properly formatted in Markdown without unnecessary placeholders like \"Main Content.\"\n6. Do not include triple backticks (''') or any additional spaces or text outside of the conclusion itself.\nEnsure clean and structured formatting without unnecessary dividers or extra line breaks.\n\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        560,
        1472
      ],
      "id": "b272e84d-56f2-44d5-83c9-f57a2ef3b307",
      "name": "Article Assembly Agent"
    },
    {
      "parameters": {
        "model": "gpt-4o-2024-11-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        560,
        1632
      ],
      "id": "2cdc1fe2-8906-4a75-8e54-668ecc7728bb",
      "name": "OpenAI Chat Model3"
    },
    {
      "parameters": {
        "resource": "folder",
        "name": "={{ $('Sets New Title Field').item.json.new_title }}",
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive",
          "cachedResultUrl": "https://drive.google.com/drive/my-drive"
        },
        "folderId": {
          "__rl": true,
          "value": "={{ $('Brand Settings').item.json.gdrive_parent }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1728,
        1472
      ],
      "id": "2e1c484a-ed16-4c48-90bf-81a64951000e",
      "name": "Create Article Folder"
    },
    {
      "parameters": {
        "operation": "share",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.documentId }}",
          "mode": "id"
        },
        "permissionsUi": {
          "permissionsValues": {
            "role": "writer",
            "type": "anyone"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1792,
        1904
      ],
      "id": "ee120241-a98e-4c80-88a7-1eb862e445f2",
      "name": "Google Drive"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7c282be5-3020-44b9-bf77-61639e3dd763",
              "name": "main body",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4672,
        960
      ],
      "id": "37945837-53f4-4a6c-a47a-b212afc78ff1",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "content": "## Get Working Title, Description, Keywords from Airtable Article Writer\n\nGet's this data for use in the first agent that creates the writing style, tone, target audience/persona and goal.\n\nTriggered by status field in the Article Writer table. Create Article = Write Article",
        "height": 220,
        "width": 600,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        512,
        400
      ],
      "id": "58629f6b-235c-4990-b397-5871d68a34fb",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Dynamic Writing Guidelines and Hidden Insights\nBased on real-world search results and competitor analysis, ensuring that your AI-generated articles align with user intent better than static SEO methods.\n\nUses working title, description (both from keyword categorization), and top 5 search results to generate writing style and tone, goal of the article, hidden insights from AI analysis, semantic insights and keywords. All for use throughout the workflow. ",
        "height": 260,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        512,
        720
      ],
      "id": "2a329feb-d4f7-4642-8088-62bea50c083a",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Use the given:\nTitle: {{ $json.Title }}\nDescription: {{ $json.Description }}\nAnd the Tavily SERP Results tool to perform research for the primary keyword, {{ $('GET - Article Writer').item.json.Keyword }}. \n\nFormat your response as a JSON object:\nIMPORTANT: Do not include extra text, introduction messages, line breaks \\n, or any additional characters.\nJSON Output\n{\n  \"search_intent\": \"<string: informational | transactional | navigational | commercial>\",\n  \"writing_style\": \"<string: concise and professional | engaging and storytelling | data-driven and technical | etc.>\",\n  \"writing_tone\": \"<string: friendly and conversational | formal and authoritative | persuasive and compelling | etc.>\",\n  \"hidden_insight\": \"<string: unique insight if found, otherwise 'No significant insights detected beyond existing content trends.'>\",\n  \"target_audience\": \"<string: who this article is for, e.g., small business owners, tech enthusiasts, marketers, etc.>\",\n  \"goal_of_article\": \"<string: main objective of the article based on search results and insights>\",\n  \"semantic_analysis\": {\n    \"common_subtopics\": [\n      \"<string: subtopic 1>\",\n      \"<string: subtopic 2>\",\n      \"<string: subtopic 3>\"\n    ],\n    \"related_questions\": [\n      \"<string: question 1>\",\n      \"<string: question 2>\",\n      \"<string: question 3>\"\n    ]\n  },\n  \"keywords\": {\n    \"primary_keyword\": \"<string: main focus keyword>\",\n    \"secondary_keywords\": [\n      \"<string: related keyword 1>\",\n      \"<string: related keyword 2>\",\n      \"<string: related keyword 3>\"\n    ],\n    \"semantic_keywords\": [\n      \"<string: semantic keyword 1>\",\n      \"<string: semantic keyword 2>\",\n      \"<string: semantic keyword 3>\"\n    ],\n    \"long_tail_keywords\": [\n      \"<string: long-tail keyword 1>\",\n      \"<string: long-tail keyword 2>\",\n      \"<string: long-tail keyword 3>\"\n    ]\n  }\n}\n\n\nExample JSON Output with Hidden Insight\n{\n  \"search_intent\": \"informational\",\n  \"writing_style\": \"engaging and storytelling\",\n  \"writing_tone\": \"friendly and conversational\",\n  \"hidden_insight\": \"Most content focuses on efficiency and cost savings, but small business owners struggle with decision fatigue. AI automation is not just a time-saver—it helps reduce stress by eliminating repetitive decisions.\",\n  \"target_audience\": \"small business owners, solopreneurs, and startup founders\",\n  \"goal_of_article\": \"Educate small business owners on how AI automation reduces decision fatigue while increasing efficiency and revenue.\",\n  \"semantic_analysis\": {\n    \"common_subtopics\": [\n      \"What is AI automation?\",\n      \"How small businesses can use AI\",\n      \"Best AI tools for business automation\",\n      \"Cost vs. benefit analysis of AI automation\"\n    ],\n    \"related_questions\": [\n      \"How does AI reduce decision fatigue?\",\n      \"What’s the easiest way for small businesses to start using AI?\",\n      \"Is AI automation worth the cost for small businesses?\"\n    ]\n  },\n  \"keywords\": {\n    \"primary_keyword\": \"AI automation for small businesses\",\n    \"secondary_keywords\": [\n      \"AI-powered automation tools\",\n      \"best AI software for small businesses\",\n      \"workflow automation for entrepreneurs\"\n    ],\n    \"semantic_keywords\": [\n      \"business process automation\",\n      \"machine learning in small business\",\n      \"how AI helps efficiency\"\n    ],\n    \"long_tail_keywords\": [\n      \"how can AI help small businesses save time?\",\n      \"best AI automation tools for startups\",\n      \"AI vs manual workflow optimization\"\n    ]\n  }\n}\n\n\nExample JSON Output No Hidden Insight\n{\n  \"search_intent\": \"commercial\",\n  \"writing_style\": \"concise and professional\",\n  \"writing_tone\": \"informative and trustworthy\",\n  \"hidden_insight\": \"No significant insights detected beyond existing content trends.\",\n  \"target_audience\": \"cycling enthusiasts, winter sport athletes, and outdoor adventurers\",\n  \"goal_of_article\": \"Provide an in-depth comparison of the best winter cycling gear and help cyclists choose the right products based on weather conditions.\",\n  \"semantic_analysis\": {\n    \"common_subtopics\": [\n      \"What to look for in winter cycling gear\",\n      \"Top-rated winter cycling jackets and gloves\",\n      \"How to layer clothing for winter rides\",\n      \"Cycling safety tips for cold-weather conditions\"\n    ],\n    \"related_questions\": [\n      \"What is the warmest winter cycling jacket?\",\n      \"Are insulated cycling gloves worth it?\",\n      \"How do I stay warm on long winter bike rides?\"\n    ]\n  },\n  \"keywords\": {\n    \"primary_keyword\": \"best winter gear for cyclists\",\n    \"secondary_keywords\": [\n      \"winter cycling jackets\",\n      \"best gloves for cold weather cycling\",\n      \"waterproof cycling gear\"\n    ],\n    \"semantic_keywords\": [\n      \"insulated bike clothing\",\n      \"cold-weather cycling apparel\",\n      \"bike safety in winter\"\n    ],\n    \"long_tail_keywords\": [\n      \"how to choose winter cycling gloves?\",\n      \"best winter cycling gear for long-distance rides\",\n      \"how to keep hands warm while biking in winter\"\n    ]\n  }\n}\n\n",
        "options": {
          "systemMessage": "You are an advanced AI content strategist trained to analyze search results and generate precise writing guidelines for an SEO-optimized blog post. Your goal is to ensure that the article aligns with **search intent**, **semantic relevance**, and **audience expectations** while also uncovering **hidden insights** that may provide a unique angle.\n\n{{\n### **Your Task:**\nYou will be given:\n- A **working title**\n- An **article description**\n- A **primary keyword**\n- A **set of search results** (retrieved via the Tavily search results tool)\n\nYour job is to analyze the data and generate **optimized writing guidelines** with the following structured JSON output:\n\n### **1️⃣ Search Intent Detection**  \nDetermine whether the primary intent of the keyword is:  \n- **informational** (learning about a topic)  \n- **transactional** (considering a purchase or service)  \n- **navigational** (finding a specific brand/website)  \n- **commercial** (comparing options before making a decision)  \n\n### **2️⃣ Writing Style & Tone**  \n- Identify the best **writing style** based on search results (e.g., “concise and professional,” “engaging and storytelling,” “data-driven and technical,” etc.).  \n- Identify the **appropriate tone** (e.g., “friendly and conversational,” “formal and authoritative,” “persuasive and compelling,” etc.).  \n\n### **3️⃣ Hidden Insight Extraction**  \n- Analyze **patterns in competitor content** to identify **an insight that is not immediately obvious** but could provide a unique angle.  \n- If no meaningful insight is found, return `\"hidden_insight\": \"No significant insights detected beyond existing content trends.\"`  \n- If an insight is found, clearly explain it.  \n- **Do NOT modify writing style or tone based on the insight**—insights should be separate observations, not tone/style adjustments.  \n\n### **4️⃣ Semantic Analysis (Content Structuring)**  \n- Extract the **common subtopics** frequently covered in top-ranking pages.  \n- Identify **related questions** users ask.  \n\n### **5️⃣ Keyword Extraction**  \n- Categorize keywords based on **how they should be used** later in the workflow.  \n- Format them as follows:  \n  - **Primary Keyword** → The main topic focus.  \n  - **Secondary Keywords** → Variations of the primary keyword that should be used naturally in the content.  \n  - **Semantic Keywords** → Contextually related terms that improve topic relevance.  \n  - **Long-Tail Keywords** → Natural search queries and phrases that match user questions.  \n\n### **Format your response strictly in valid JSON.**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        544,
        960
      ],
      "id": "2470d531-0921-4c3a-8d46-4cfdcff2410e",
      "name": "SERPs, Writing, KWs, Insights"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "438738d8-d610-47e3-9ddf-efcfb97d3701",
              "name": "new_title",
              "value": "={{ $json.output.parseJson().refined_title }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1744,
        960
      ],
      "id": "85283514-adb8-4061-9fde-5f94f1122184",
      "name": "Sets New Title Field"
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "={{ $('Brand Settings').item.json.base_id }}",
          "mode": "id"
        },
        "table": {
          "__rl": true,
          "mode": "id",
          "value": "tblVTpv8JG5lZRiF2"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Writing Style": "={{ $json.writing_style }}",
            "Tone": "={{ $json.writing_tone }}",
            "Goal of Article": "={{ $json.article_goal }}",
            "Target Audience": "={{ $json.target_audience }}",
            "Search Intent": "={{ $json.search_intent }}",
            "Hidden Insight": "={{ $json.hidden_insight }}",
            "Semantic Analysis": "={{ $json.semantic_analysis }}",
            "Keyword": "={{ $('Set Airtable Fields for Agents').item.json.Keyword }}",
            "Keywords": "={{ $json.keywords }}",
            "Final Title": "={{ $json.new_title }}",
            "id": "={{ $('GET - Article Writer').item.json.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Final Title",
              "displayName": "Final Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Create Article",
              "displayName": "Create Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Write Article",
                  "value": "Write Article"
                },
                {
                  "name": "Keep",
                  "value": "Keep"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Keyword",
              "displayName": "Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Keyword",
              "displayName": "Primary Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Google Doc URL",
              "displayName": "Google Doc URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Writing Style",
              "displayName": "Writing Style",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Tone",
              "displayName": "Tone",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Target Audience",
              "displayName": "Target Audience",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Goal of Article",
              "displayName": "Goal of Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Search Intent",
              "displayName": "Search Intent",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hidden Insight",
              "displayName": "Hidden Insight",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Semantic Analysis",
              "displayName": "Semantic Analysis",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Keywords",
              "displayName": "Keywords",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1968,
        960
      ],
      "id": "1e01005d-e7d6-463b-891a-b08e1ebf330e",
      "name": "Update Article Title"
    },
    {
      "parameters": {
        "content": "## Refine the Working Title - Set New Title in Airtable\nUses all the input and generated info to create an SEO optimized title.\n\nThe airtable record is updated.",
        "height": 260,
        "width": 760,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1344,
        720
      ],
      "id": "dd2448fb-103e-49ac-851a-6f1956d317d8",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "model": "gpt-4o-2024-11-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        1392,
        1152
      ],
      "id": "41a6d72c-9f6a-4db1-aedb-c162a33a69fd",
      "name": "Open AI"
    },
    {
      "parameters": {
        "model": "gpt-4o-2024-11-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        2208,
        1152
      ],
      "id": "73b373d3-6a48-4dd1-9dc8-24dd003968a7",
      "name": "OpenAI Key Takeaways"
    },
    {
      "parameters": {
        "model": "gpt-4o-2024-11-20",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        2848,
        1152
      ],
      "id": "f017b31c-1018-4136-8301-b572f2dacf0e",
      "name": "OpenAI"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a comprehensive, SEO-optimized prompt for an AI article writer using the data below.\n\nPrimary Keyword: {{ $('Set Airtable Fields for Agents').item.json.Keyword }}\nTitle: {{ $('Set Airtable Fields for Agents').item.json.Title }}\nHidden insight: {{ $('Set KWs and Insights fields').item.json.hidden_insight }}\nSearch intent: {{ $('Set KWs and Insights fields').item.json.search_intent }}\nSemantic analysis: {{ $('Set KWs and Insights fields').item.json.semantic_analysis }}\nSecondary keywords: {{ $('Set KWs and Insights fields').item.json.keywords_secondary }}\nWriting style: {{ $('Set KWs and Insights fields').item.json.writing_style }}\nWriting tone: {{ $('Set KWs and Insights fields').item.json.writing_tone }}\nArticle goal: {{ $('Set KWs and Insights fields').item.json.article_goal }}\nOutline: {{ $json.outline }}",
        "options": {
          "systemMessage": "=Your Role & Task\nYou are an AI prompt engineering specialist with expertise in crafting structured, SEO-optimized, and adaptable writing prompts.\nYour job is to generate a concise yet effective prompt that will guide an AI writing agent in producing a high-quality, well-structured article body based on the provided inputs.\n\nPrompt Requirements\nYour generated prompt should:\n✅ Guide the AI writing agent to write only the main body sections—the introduction, key takeaways, and conclusion are handled separately.\n✅ Follow the article’s outline as a guiding framework, ensuring natural flow and logical transitions between sections.\n✅ Encourage informative, engaging, and well-structured writing, tailored to the topic and audience.\n✅ Incorporate SEO best practices naturally, ensuring primary and secondary keywords are used in relevant sections without forced placement.\n✅ Evaluate the relevance of hidden insights—if useful, include them as a core argument or supporting detail; if not, leave them out.\n✅ Use semantic analysis, related questions, and common subtopics to strengthen content depth.\n✅ Ensure flexibility—allow the AI writing agent to expand on ideas, incorporate examples, and maintain logical coherence.\n\nExample Inputs & Outputs\nExample Inputs\nTitle: \"The Best Fishing Destinations in North America\"\nPrimary Keyword: \"best fishing destinations\"\nSecondary Keywords: \"top fishing spots, fishing in North America, best places for fishing\"\nSearch Intent: \"Informational\"\nWriting Style: \"Engaging and expert-driven\"\nWriting Tone: \"Conversational yet authoritative\"\nArticle Goal: \"Provide anglers with a comprehensive guide to the best fishing destinations, key factors to consider, and seasonal variations.\"\nSemantic Analysis (Common Subtopics & Related Questions):\n{\n  \"common_subtopics\": [\n    \"Freshwater vs. saltwater fishing: Key differences\",\n    \"Best fishing seasons for different regions\",\n    \"Gear recommendations based on fishing style\"\n  ],\n  \"related_questions\": [\n    \"What are the best fishing spots in North America?\",\n    \"Where can I find great deep-sea fishing locations?\",\n    \"What’s the best time of year to go fishing?\"\n  ]\n}\nHidden Insight (if applicable): \"Many top-ranked fishing destinations have conservation programs that impact seasonal availability, which most travel guides overlook.\"\nOutline:\n## Best Freshwater Fishing Spots  \nExploring the top lakes and rivers for freshwater fishing.  \n\n## Best Deep-Sea Fishing Destinations  \nHighlighting prime locations for saltwater and offshore fishing.  \n\n## Seasonal Considerations  \nHow different seasons affect fishing opportunities.  \n\n## Essential Gear & Preparation Tips  \nWhat to bring for a successful fishing trip.  \n\nxample Output (Generated Writing Prompt for the AI Writing Agent)\nWriting Prompt: The Best Fishing Destinations in North America\nObjective:\nCraft a well-structured, SEO-optimized, and engaging article body focusing on fishing destinations in North America. The article should provide actionable insights, expert recommendations, and real-world considerations to help anglers choose the best locations.\n\nTarget Audience:\nRecreational and professional anglers looking for detailed guidance on fishing locations, seasonal factors, and essential gear.\n\nGuidelines for the AI Writing Agent\n1. Follow the Outline for Logical Structure & Expansion\nUse the provided outline as a structural blueprint, ensuring smooth transitions between sections.\nExpand each section with relevant insights, expert opinions, and practical examples rather than merely summarizing.\nDO NOT include an introduction or conclusion—focus strictly on main body sections.\n2. Natural Integration of Keywords (SEO-Optimized)\nPrimary Keyword: \"{{ $('Set Airtable Fields for Agents').item.json.Keyword }}\" should appear organically in relevant sections.\nSecondary Keywords: \"{{ $('Set KWs and Insights fields').item.json.keywords_secondary }}\" should be integrated contextually to enhance SEO without overuse.\nLong-Tail & Semantic Keywords: Use these strategically in discussions, answering key questions where applicable.\nAvoid forced keyword placement—prioritize readability and clarity.\n3. Adapt Writing Style & Tone Based on Topic\nFor technical/business content: Maintain a formal, authoritative, and data-driven approach.\nFor consumer, lifestyle, or travel content: Use an engaging, expert-guide tone with practical insights.\nEnsure clear, well-researched content that suits the target audience.\n4. Expand on Semantic Insights & Related Questions\nAddress common subtopics where relevant, such as:\nDefining key concepts to establish clarity.\nComparing approaches, tools, or strategies for deeper understanding.\nExploring industry-specific challenges & solutions where applicable.\nIntegrate related questions naturally—e.g., \"What are the best fishing spots in North America?\" or \"How does AI automation impact business efficiency?\"\n5. Use Hidden Insights Only If Relevant\nEvaluate whether the hidden insight adds value to the article.\nIf applicable, incorporate it as a key supporting argument to enrich the content.\nIf not relevant, omit it rather than forcing inclusion.\n6. Provide Real-World Applications & Actionable Advice\nOffer examples, case studies, or industry applications to enhance reader engagement.\nProvide actionable steps where applicable (e.g., how to implement AI tools, how to choose the right fishing destination, best practices for content marketing).\n7. Formatting for Readability & Engagement\nUse subheadings, bullet points, and short paragraphs for easy scanning.\nInclude lists, tips, or expert recommendations where useful.\nEnsure logical section transitions while maintaining engagement.\n8. No Introduction or Conclusion—Only Write Main Body Sections\nDO NOT include an introduction or conclusion—focus strictly on the main body content as structured in the outline.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        3968,
        960
      ],
      "id": "c5d92519-fa1c-4f44-b786-ccafc3061345",
      "name": "Main Body Prompt Writer"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-2024-11-20",
          "mode": "list",
          "cachedResultName": "gpt-4o-2024-11-20"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3968,
        1152
      ],
      "id": "5ac83f51-b6f7-47cc-bff4-bdd48eb38911",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Use the main body content of an article to write a conclusion. Output markdown format.\n\nMain Body\n{{ $json['main body'] }}",
        "options": {
          "systemMessage": "=You are an expert writing assistant specializing in crafting concise, insightful, and impactful conclusions for articles across various topics. Your goal is to summarize the key takeaways, reinforce the article’s value, and leave the reader with a lasting impression.\n\nGuidelines for Generating the Conclusion:\n\n✅ Summarize Key Takeaways Without Repetition\n\nIdentify the most essential points from the article without repeating entire sentences from the main body.\n\nHighlight core insights, trends, or findings in a concise manner.\n\n✅ Reinforce the Article’s Value & Relevance\n\nEmphasize why the information matters in the broader context of the topic.\n\nAlign with the article’s purpose—whether it’s to educate, inform, persuade, or provide solutions.\n\n✅ Deliver a Strong Final Thought\n\nEnd with a compelling, forward-looking, or actionable statement.\n\nConsider:\n\nA thought-provoking question\n\nA call to action (if relevant)\n\nA statement on future implications or ongoing developments\n\nAvoid generic phrases (e.g., “This is just the beginning” or “The future looks bright”).\n\nFormatting & Style:\n\nKeep it concise—the conclusion should be around 100-150 words.\n\nUse clear, authoritative, and engaging language.\n\nAdapt tone and style to match the article (technical, business, educational, etc.).\n\nInput:\n\nThe main body of the article (excluding introduction & key takeaways)\n\nThe article's title (for context)\n\nOutput:A well-structured conclusion that effectively summarizes key points, reinforces relevance, and ends with a compelling thought.\n\nExample Conclusion for a Business Article\n\n(Title: \"The Rise of Agentic AI in Workflow Automation\")\n\nAs businesses seek greater efficiency and adaptability, agentic AI automation is emerging as a transformative force in workflow management. By reducing cognitive load, managing complexity, and enabling continuous improvement, these systems empower organizations to operate with unprecedented precision and scalability.\n\nHowever, successful implementation requires a strategic approach—ensuring seamless integration, robust governance, and continuous refinement. Organizations that embrace this shift will gain a significant competitive edge, optimizing operations while driving innovation.\n\nFor businesses evaluating their automation strategies, the key question is no longer if agentic AI will play a role—but how soon they will adopt it to stay ahead in a rapidly evolving digital landscape.\n\nExample Conclusion for a Consumer Guide\n\n(Title: \"How to Choose the Best Electric Bike for Your Needs\")\n\nChoosing the right electric bike depends on your lifestyle, terrain, and riding preferences. Whether you need a powerful e-bike for commuting or a lightweight model for weekend adventures, understanding motor types, battery life, and key features ensures a smarter purchase.\n\nBy evaluating your specific needs and budget, you can invest in an e-bike that enhances both convenience and sustainability. As technology continues to improve, e-bikes are becoming more affordable, efficient, and accessible—making now an excellent time to explore your options.\n\nBefore making a final decision, test ride different models, compare specifications, and consider long-term factors like maintenance and warranty coverage. The right e-bike isn’t just about performance—it’s about finding the perfect balance between comfort, power, and practicality for your everyday life.\n\nOutput Requirements\nFormat the output in Markdown using ## for the conclusion heading.\nDo not include triple backticks (''') or any additional spaces or text outside of the conclusion itself.\nEnsure clean and structured formatting without unnecessary dividers or extra line breaks.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        4864,
        960
      ],
      "id": "9fdf4f7b-f28c-4cc7-ac9f-a79b000e5a82",
      "name": "AI Agent Conclusion Writer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7e24bb1b-7f69-4a4b-a414-d4acf444313e",
              "name": "conclusion",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5232,
        960
      ],
      "id": "52d74029-12a2-42da-9e1f-df7bbcce5cd7",
      "name": "Set Conclusion"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-2024-11-20",
          "mode": "list",
          "cachedResultName": "gpt-4o-2024-11-20"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        928,
        1632
      ],
      "id": "f5a0dd41-86f3-42b4-ac01-f11fbb4e1f8c",
      "name": "OpenAI Chat Model4"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-2024-11-20",
          "mode": "list",
          "cachedResultName": "gpt-4o-2024-11-20"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4320,
        1152
      ],
      "id": "020b2fb5-4f47-4cd7-9e7c-d44f1882fa54",
      "name": "OpenAI Chat Model5"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Perform the final edit on:\n {{ $json.output }}",
        "options": {
          "systemMessage": "=You are an expert SEO-optimized content final editor.\n\nYour task is to enhance and expand the provided article to near-perfect quality (9.5+/10) while maintaining clarity, logical flow, and readability. The final article should be well-structured, engaging, and adaptable to any topic, including (but not limited to) business, healthcare, technology, education, finance, environmental science, legal, consumer guides, and marketing.\n\n✅ General Refinement Guidelines\n1️⃣ Expand, Don’t Cut\nPreserve all valuable content while adding depth where necessary.\nDo not shorten or remove sections unless redundant or unclear.\nIf something feels incomplete, expand rather than delete it.\n2️⃣ Strengthen Section Transitions for Seamless Flow\nEnsure smooth transitions between sections by adding brief lead-ins before introducing a new concept.\nEach section should naturally build on the previous one—avoiding abrupt shifts.\nImplementation:\nIf a new section introduces a major topic, insert a transition sentence summarizing why the previous section matters.\nExample:\nBefore (Abrupt Shift):\n\"While automation improves efficiency, its true power emerges when integrated with existing systems.\"\nAfter (Smoother Transition):\n\"Efficiency gains are only part of the equation—true business impact comes from seamlessly integrating automation with existing workflows to ensure sustainable improvements.\"\n✅ Ensures smoother flow between ideas.\n\n3️⃣ Diversify Real-World Applications Across More Industries\nDo NOT over-focus on one industry or domain (e.g., AI, tech, or automation).\nWhere applicable, ensure varied examples in fields like:\nHealthcare (diagnostic automation, patient management)\nFinance (risk assessment, fraud detection, portfolio management)\nEducation (personalized learning, curriculum adaptation)\nLegal (contract automation, compliance monitoring)\nMarketing (data-driven campaigns, customer behavior analysis)\nRetail & E-commerce (inventory optimization, demand forecasting)\nConsumer Behavior (product recommendations, pricing strategies)\nEnvironmental Science (climate impact modeling, resource allocation)\nImplementation:\nIf the article lacks industry diversity, add 1–2 additional sector applications.\nExample:\nBefore (Too Narrow):\n\"Predictive analytics is transforming logistics and finance.\"\nAfter (Expanded with More Fields):\n\"Predictive analytics is transforming industries beyond logistics and finance. In healthcare, it enhances diagnostic accuracy; in education, it customizes learning paths; in marketing, it optimizes ad spend by predicting customer behavior.\"\n✅ Expands article relevance to a broader audience.\n\n4️⃣ Strengthen the Conclusion with a Future-Focused Perspective\nAvoid generic wrap-ups—end with a compelling strategic takeaway or challenge.\nEnsure future trends, competitive implications, and thought-provoking insights are included.\nImplementation:\nInstead of simply summarizing, pose a challenge or future opportunity.\nExample:\nBefore (Weak Ending):\n\"The question remains: How will businesses use this technology to redefine operations? The time to act is now.\"\nAfter (More Forward-Thinking):\n\"Looking ahead, businesses that embrace adaptable strategies and data-driven decision-making will lead in an increasingly competitive landscape. Whether through emerging technologies, customer-first innovation, or operational agility, the next era of success will belong to those who can not just adapt—but anticipate change. The real question isn’t if you’ll adopt these advancements—but how effectively you’ll use them to gain a competitive edge.\"\n✅ Leaves the reader with a clear action step or thought-provoking challenge.\n\n\n5️⃣ Expand Instead of Reduce Content\nDO NOT cut content unless it is redundant or weakens clarity.\nIf a section feels too brief or lacks depth, expand it by:\nProviding real-world examples\nAdding practical applications\nElaborating on key insights\nStrengthening data-backed statements\nExample Fix:\nBefore (Overly brief):\n\"Sustainable practices benefit businesses.\"\nAfter (More informative & engaging):\n\"Sustainable practices provide both environmental and financial advantages. Businesses that invest in renewable energy, reduce waste, and optimize resource consumption see long-term cost savings and increased brand loyalty.\"\n\n6. Do not add any commentary on what improvements you made. Just output the refined article.\n7. Do not add dividing lines between sections (\"---\") or any extra spacing or line breaks.\n\nMake every article a 9.5+/10 by refining structure, depth, and industry relevance while keeping it universally applicable across topics.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}\n\nAlso factor in the Brand Guidelines:\n{{ $('Set Airtable Fields for Agents').item.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        928,
        1472
      ],
      "id": "c25ecb41-f965-4d27-a5f8-abe4606d3b4c",
      "name": "Final Edit Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4d5ae86e-7aec-4a4c-9256-7042d2e32497",
              "name": "final_article",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        1472
      ],
      "id": "1c3c7810-022a-4f0d-b755-9f0271c50c0a",
      "name": "Final Article"
    },
    {
      "parameters": {
        "folderId": "={{ $json.id }}",
        "title": "={{ $('Sets New Title Field').item.json.new_title }}"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        1952,
        1472
      ],
      "id": "c886d513-e34a-4a9c-8a0a-bd7ddc44538a",
      "name": "Create Doc Filename is title"
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $('Final Article').item.json.final_article }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        2160,
        1472
      ],
      "id": "881c8d93-b13b-480f-9c21-f5f87c8d1c33",
      "name": "Add Final Article"
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $('Add Final Article').item.json.documentId }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "=\n{{ $json.message.content }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        944,
        1904
      ],
      "id": "b5a59e5e-1cf2-41b3-a600-3fe2f9dc3d3a",
      "name": "Add Meta Description"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "You are an AI-powered Image Prompt Generator. Your task is to generate a detailed, visually engaging image prompt for an AI image-generation model. The image should serve as the featured image for the article, representing its key themes and attracting user attention.\n\nGuidelines:\n✅ Visual Representation of the Article:\n\nThe image should capture the essence of the topic in a compelling, high-quality way.\nAvoid overly generic imagery—ensure the image aligns with the article's subject matter and industry (e.g., AI automation, business processes, workflow management, etc.).\n✅ Descriptive Detail for Image Generation:\n\nUse rich visual descriptions that include:\nScene setting (e.g., futuristic cityscape, high-tech office, dynamic team collaboration).\nElements & objects (e.g., digital interfaces, robots, data visualizations, business professionals).\nMood & lighting (e.g., cinematic lighting, energetic atmosphere, professional and modern tone).\nPerspective (e.g., wide-angle, close-up, action shot, aerial view).\n✅ Consistency & Formatting:\n\nOutput must be in Markdown format with an ## Image Prompt heading.\nEnd the image prompt with --ar 16:9 to specify the 16:9 aspect ratio for better compatibility.\nExamples:\nBefore (Weak Example):\n\"An image of AI and business automation.\" ❌ Too vague, lacks engagement.\n\nAfter (Optimized Example):## Image Prompt  \nA futuristic digital workspace with AI-powered automation interfaces, holographic data charts, and robotic assistants collaborating with business professionals. The environment is sleek and modern, illuminated by ambient blue neon lighting, symbolizing innovation and efficiency. --ar 16:9  \n",
              "role": "system"
            },
            {
              "content": "=Generate an AI image prompt that visually represents the following article. Ensure the description is detailed, engaging, and optimized for an eye-catching featured image.\n\n {{ $('Final Article').item.json.final_article }}\n\n## Image Prompt  \n[Your detailed AI image prompt here] --ar 16:9\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1168,
        1904
      ],
      "id": "32668d16-4fb2-4e7d-9e89-3a198fb3113c",
      "name": "OpenAI Image Prompt"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-2024-11-20",
          "mode": "list",
          "cachedResultName": "GPT-4O-2024-11-20"
        },
        "messages": {
          "values": [
            {
              "content": "You are an SEO-optimized Meta Description Generator. Your task is to generate a compelling, keyword-rich meta description for the provided article. The description should be concise, engaging, and optimized for search engines while accurately summarizing the article’s core value.\n\nGuidelines:\n✅ Length: Keep the meta description between 150–160 characters to ensure full visibility in search results.\n✅ Keyword Optimization: Incorporate primary and secondary keywords naturally, focusing on high-impact phrases relevant to the article.\n✅ Engagement & Clarity:\n\nWrite in an active voice with a clear and compelling hook.\nSummarize the key benefit of the article—why should someone read it?\nAvoid vague statements—be specific about what the article covers.\n✅ Call to Action (Optional, but Preferred): Where possible, include a soft CTA to encourage clicks (e.g., “Discover how…”, “Learn the best strategies…”).\n✅ Formatting:\nUse plain text format.\nNo extra spacing or unnecessary formatting—the output should be clean and ready to use.\nExamples:\nBefore (Weak Example):\n\"This article discusses agentic AI and how it can be used in businesses.\" ❌ Too vague, lacks engagement.\n\nAfter (Optimized Example):\nUnlock the power of agentic AI automation! Learn how businesses enhance efficiency, decision-making, and scalability with self-evolving AI-driven workflows.\n",
              "role": "system"
            },
            {
              "content": "=Generate an SEO-optimized meta description for the following article. Ensure it is concise (150-160 characters), engaging, and includes high-impact keywords.\n{{ $('Final Article').item.json.final_article }}\n"
            },
            {
              "content": "Format the output in plain text",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        560,
        1904
      ],
      "id": "7200a2c4-1210-4bef-b8d5-cd115f33356b",
      "name": "OpenAI Meta"
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $('Add Meta Description').item.json.documentId }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "=\n{{ $json.message.content }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        1552,
        1904
      ],
      "id": "d11e53c3-f2b3-48a1-81fa-bdc5014a16f8",
      "name": "Add Image Prompt"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        544,
        1152
      ],
      "id": "506d688c-37ab-4de4-a4af-0993be492472",
      "name": "Anthropic Chat Model2"
    },
    {
      "parameters": {
        "content": "## Create Key Takeaways with Intro, bullet points, and Outro\n\nBrings in hidden insights if applicable which will drive the outline and main body content.",
        "height": 260,
        "width": 580,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2160,
        720
      ],
      "id": "08d5f42d-9d4d-4739-beaa-1998e134c2da",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Write Conclusion\n",
        "height": 260,
        "width": 540,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4832,
        720
      ],
      "id": "d22cf3e0-ddf3-4466-9076-78ce8f193085",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "## Create Main Body Prompt\n",
        "height": 260,
        "width": 340,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3920,
        720
      ],
      "id": "9ae11070-dcd7-4612-95d5-1325a49d9ff7",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "## Create Engaging Introduction\n",
        "height": 260,
        "width": 520,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2800,
        720
      ],
      "id": "6679a8da-b483-44ec-a081-19c3624e5e7a",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1152,
        208
      ],
      "id": "ca8e44dd-4680-4b31-abf1-c151b926081b",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "={{ $('Brand Settings').item.json.base_id }}",
          "mode": "id"
        },
        "table": {
          "__rl": true,
          "mode": "id",
          "value": "tblVTpv8JG5lZRiF2"
        },
        "filterByFormula": "({Create Article} = 'Write Article')",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        688,
        208
      ],
      "id": "f94a9bad-4c0a-4a0b-9aa7-c8203cc717aa",
      "name": "GET - Article Writer",
      "credentials": {
        "airtableTokenApi": {
          "id": "dGvN31oQ0ywWKJuF",
          "name": "Airtable Moj token"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "={{ $('Brand Settings').item.json.base_id }}",
          "mode": "id"
        },
        "table": {
          "__rl": true,
          "mode": "id",
          "value": "tblVTpv8JG5lZRiF2"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('GET - Article Writer').item.json.id }}",
            "Writing Style": "={{ $json.writing_style }}",
            "Tone": "={{ $json.writing_tone }}",
            "Target Audience": "={{ $json.target_audience }}",
            "Goal of Article": "={{ $json.article_goal }}",
            "Search Intent": "={{ $json.search_intent }}",
            "Hidden Insight": "={{ $json.hidden_insight }}",
            "Semantic Analysis": "={{ $json.semantic_analysis }}",
            "Keywords": "={{ $json.keywords }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Create Article",
              "displayName": "Create Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Write Article",
                  "value": "Write Article"
                },
                {
                  "name": "Keep",
                  "value": "Keep"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Final Title",
              "displayName": "Final Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Keyword",
              "displayName": "Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Keyword",
              "displayName": "Primary Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Google Doc URL",
              "displayName": "Google Doc URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Writing Style",
              "displayName": "Writing Style",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Tone",
              "displayName": "Tone",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Target Audience",
              "displayName": "Target Audience",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Goal of Article",
              "displayName": "Goal of Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Search Intent",
              "displayName": "Search Intent",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hidden Insight",
              "displayName": "Hidden Insight",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Semantic Analysis",
              "displayName": "Semantic Analysis",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Keywords",
              "displayName": "Keywords",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1152,
        960
      ],
      "id": "5ecaea8a-8e4b-47b2-bb71-76c9a4294bd2",
      "name": "Update Article Writer table"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b5d2b743-090c-4432-a7e7-c25b2e4bd76f",
              "name": "url",
              "value": "=https://docs.google.com/document/d/{{ $('Add Final Article').item.json.documentId }}/edit",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1984,
        1904
      ],
      "id": "c53b629e-3b9c-4672-b411-13fc29ec9925",
      "name": "GDoc Link"
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "={{ $('Brand Settings').item.json.base_id }}",
          "mode": "id"
        },
        "table": {
          "__rl": true,
          "mode": "id",
          "value": "tblVTpv8JG5lZRiF2"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('GET - Article Writer').item.json.id }}",
            "Google Doc URL": "={{ $json.url }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Create Article",
              "displayName": "Create Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Write Article",
                  "value": "Write Article"
                },
                {
                  "name": "Keep",
                  "value": "Keep"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Keyword",
              "displayName": "Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Keyword",
              "displayName": "Primary Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Google Doc URL",
              "displayName": "Google Doc URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Writing Style",
              "displayName": "Writing Style",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Tone",
              "displayName": "Tone",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Target Audience",
              "displayName": "Target Audience",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Goal of Article",
              "displayName": "Goal of Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Title Options",
              "displayName": "Title Options",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Original Title",
                  "value": "Original Title"
                }
              ],
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2208,
        1904
      ],
      "id": "5e1cbc1e-40cb-4612-a727-a925dc24c9a5",
      "name": "ADD - GDoc URL"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C0889718P8S",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "text": "=Blog post ready for review: \nTitle:\n{{ $('GET - Article Writer').item.json['Final Title'] }}\nGoogle Drive Folder:\nhttps://drive.google.com/drive/folders/{{ $json.parents[0] }}\nDraft Link:\n{{ $('Post on Wordpress').item.json.link }}\nFeatured Image:\n{{ $('Leo - Get imageId').item.json.body.generations_by_pk.generated_images[0].url }}",
        "otherOptions": {
          "includeLinkToWorkflow": true,
          "botProfile": {
            "imageValues": {
              "profilePhotoType": "image",
              "icon_url": "https://blog.alexk1919.com/wp-content/uploads/2025/01/cropped-AlexK1919-Bug.png"
            }
          },
          "mrkdwn": true
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.2,
      "position": [
        8944,
        2704
      ],
      "id": "8c6e456f-77b7-4d73-8c5c-b51a50660da8",
      "name": "POST Blog Info",
      "webhookId": "c4501927-5177-4ba6-af10-3fcb00566af3"
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "={{ $('Brand Settings').item.json.base_id }}",
          "mode": "id"
        },
        "table": {
          "__rl": true,
          "value": "tblVTpv8JG5lZRiF2",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Create Article": "Draft Ready",
            "Title": "={{ $('GET - Article Writer').item.json.Title }}"
          },
          "matchingColumns": [
            "Title"
          ],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Create Article",
              "displayName": "Create Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Write Article",
                  "value": "Write Article"
                },
                {
                  "name": "Keep",
                  "value": "Keep"
                },
                {
                  "name": "Draft Ready",
                  "value": "Draft Ready"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Final Title",
              "displayName": "Final Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Keyword",
              "displayName": "Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Primary Keyword",
              "displayName": "Primary Keyword",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Leo Images",
              "displayName": "Leo Images",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Post URL",
              "displayName": "Post URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Google Doc URL",
              "displayName": "Google Doc URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Writing Style",
              "displayName": "Writing Style",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Tone",
              "displayName": "Tone",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Target Audience",
              "displayName": "Target Audience",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Goal of Article",
              "displayName": "Goal of Article",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Search Intent",
              "displayName": "Search Intent",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Hidden Insight",
              "displayName": "Hidden Insight",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Semantic Analysis",
              "displayName": "Semantic Analysis",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Keywords",
              "displayName": "Keywords",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        9152,
        2704
      ],
      "id": "499f11ca-b805-4939-913e-3e4cf2f2ef20",
      "name": "UPDATE Status"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Brand Settings').first().json.wordpress_url }}/wp-json/alexk1919/v1/update-meta/{{ $('Post on Wordpress').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"rank_math_focus_keyword\": \"{{ $('GET - Article Writer').item.json.Keyword }}\",\n  \"rank_math_description\": \"{{ $('OpenAI Meta').item.json.message.content }}\"\n}\n ",
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2640,
        1904
      ],
      "id": "cabd22e1-9aa3-453d-8d73-0be9a3203728",
      "name": "POST RankMath Info"
    },
    {
      "parameters": {
        "title": "={{ $('Sets New Title Field').item.json.new_title }}",
        "additionalFields": {
          "content": "={{ $('Markdown').item.json.data }}",
          "status": "draft",
          "categories": [
            188
          ]
        }
      },
      "id": "a5be25ea-0338-4d32-883d-efcff22fd798",
      "name": "Post on Wordpress",
      "type": "n8n-nodes-base.wordpress",
      "position": [
        2432,
        1904
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Final Edit\n",
        "height": 140,
        "width": 1800,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        528,
        1344
      ],
      "id": "99afdc73-f218-4ae9-8a23-d3ceddcb54e7",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Set the Wordpress URL, Airtable Base, Google Drive Parent Folder",
        "height": 220,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "51b39ce8-af2a-4ac9-9e58-784afa59896c",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Final Edit\n",
        "height": 140,
        "width": 1160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        528,
        1792
      ],
      "id": "37061125-49e0-4cd9-9df4-6e69d5502e3e",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## Draft on Wordpress",
        "height": 220,
        "width": 180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2384,
        1712
      ],
      "id": "2b068202-ab6a-440c-a213-42d8e4e9b3a0",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Update RankMath SEO Plugin Data",
        "height": 220,
        "width": 180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2608,
        1712
      ],
      "id": "ce1a0a52-1d95-43ba-bc71-5085d7a584be",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "content": "## Generate Images",
        "height": 220,
        "width": 180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2832,
        1712
      ],
      "id": "249ac24c-1c5b-4d6e-8259-8f4b3b46cf86",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3a433b0f-9957-4b64-ad81-359ab5e521d5",
              "name": "wordpress_url",
              "type": "string",
              "value": "=  https://aseosystem.pl"
            },
            {
              "id": "49664137-2d8a-411b-b991-2ee835447587",
              "name": "base_id",
              "value": "appR16EgylW0eHSKz",
              "type": "string"
            },
            {
              "id": "a6429e58-d136-41dc-bb97-99f449ed6f01",
              "name": "gdrive_parent",
              "value": "1r9uB1LN41Z3zJh57xOBdksNuphYkb-5w",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2bdef46f-4156-493d-a1d4-72a8bf0e6694",
      "name": "Brand Settings",
      "type": "n8n-nodes-base.set",
      "position": [
        80,
        208
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        3008,
        2560
      ],
      "id": "e2c9daa0-81af-4b56-860a-878995cda523",
      "name": "Wikipedia"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ { \"preset\": ['ANIME', 'CREATIVE', 'DYNAMIC', 'ENVIRONMENT', 'GENERAL', 'ILLUSTRATION', 'PHOTOGRAPHY', 'RAYTRACED', 'RENDER_3D', 'SKETCH_BW', 'SKETCH_COLOR', 'NONE'][Math.floor(Math.random() * 12)] } }}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3760,
        2144
      ],
      "id": "0eaee117-9f94-49aa-87df-33b6dde8c9d0",
      "name": "PRESETS - Random"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bcb4bc6a-5ea6-4054-b225-8475b44f07fe",
              "name": "prompt",
              "value": "={{ $json.output.image_prompt }}",
              "type": "string"
            },
            {
              "id": "56c8f20d-d9d9-4be7-ac2a-38df6ffdd722",
              "name": "model",
              "value": "de7d3faf-762f-48e0-b3b7-9d0ac3a3fcf3",
              "type": "string"
            },
            {
              "id": "ef866dc7-d0fc-4d8c-bca2-faa18bfdae2e",
              "name": "quantity",
              "value": "1",
              "type": "string"
            },
            {
              "id": "4724503a-db60-446e-bb46-1a7b9bfb33f6",
              "name": "ultra",
              "value": "false",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "c9b71128-cf1c-4e73-b731-45f39ae6e244",
      "name": "Leonardo Settings",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3488,
        2144
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://cloud.leonardo.ai/api/rest/v1/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"width\": 1536,\n  \"height\": 864,\n  \"modelId\": \"{{ $('Leonardo Settings').first().json.model }}\",\n  \"num_images\": {{ $('Leonardo Settings').item.json.quantity }},\n  \"presetStyle\": \"{{ $('PRESETS - Random').item.json.preset }}\",\n  \"prompt\": \"{{ $('Leonardo Settings').item.json.output.image_prompt }}; DO NOT INCLUDE ANY WORDS OR LABELS.\",\n  \"alchemy\": true,\n  \"highResolution\": true,\n  \"highContrast\": false,\n  \"fantasyAvatar\": false,\n  \"expandedDomain\": true,\n  \"promptMagic\": false,\n  \"public\": false,\n  \"ultra\": {{ $('Leonardo Settings').item.json.ultra }},\n  \"photoReal\": false,\n  \"enhancePrompt\": true,\n  \"negative_prompt\": \"\"\n} ",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "8a25fbb8-65c9-419a-9a3e-9cd3c2ad15f0",
      "name": "Leo - Generate Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3968,
        2144
      ]
    },
    {
      "parameters": {
        "url": "=https://cloud.leonardo.ai/api/rest/v1/generations/{{ $json.body.sdGenerationJob.generationId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "bffd533c-1229-4329-b5f7-cc1efe44a2a9",
      "name": "Leo - Get imageId",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4432,
        2144
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.body.generations_by_pk.generated_images[0].url }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4832,
        2144
      ],
      "id": "ecce14b5-938c-4e04-ad76-b50ab80c54e8",
      "name": "Download Image"
    },
    {
      "parameters": {
        "name": "={{ $('Download Image').item.json.id || $('Download Image').item.json.body.generations_by_pk.generated_images[0].id }}.jpg",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "={{ $('Create Article Folder').first().json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        5024,
        1952
      ],
      "id": "8aa1a33d-4d7f-4f9f-9782-c1566f553948",
      "name": "UPLOAD"
    },
    {
      "parameters": {
        "amount": 60
      },
      "id": "243d7924-ce39-475e-90e2-ca3f518e181b",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4224,
        2144
      ],
      "webhookId": "8c430dc9-6619-47a5-98ed-b58b0cc986d6"
    },
    {
      "parameters": {
        "toolDescription": "Retrieve the content from the url provided.",
        "url": "={{ $json[\"Post URL\"] }}",
        "optimizeResponse": true,
        "responseType": "html"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        3152,
        2592
      ],
      "id": "fd3cfa4a-0b8a-4395-b6cb-d3ed1321995d",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create an image prompt based on this content:\n{{ $json.content }}\n\nUse the HTTP Request tool to retrieve the content.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a successful image prompt generator. \n\nUse the HTTP Request Tool to retrieve the content.\n\nConsider the photo style and angle of the camera as well as the lighting that is suitable for the image and content. \n\nRemove all symbols or hashtags from the final image prompt. \n\nMake sure there is no text in the final image.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        3072,
        2144
      ],
      "id": "84b798f3-5f6a-4833-b3b8-9d981f12c024",
      "name": "Image Prompt Generator"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://cloud.leonardo.ai/api/rest/v1/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"width\": 1536,\n  \"height\": 864,\n  \"modelId\": \"{{ $('Leonardo Settings').first().json.model }}\",\n  \"num_images\": 2,\n  \"presetStyle\": \"{{ $('PRESETS - Random').item.json.preset }}\",\n  \"prompt\": \"{{ $json.output.image_prompt }}; DO NOT INCLUDE ANY WORDS OR LABELS.\",\n  \"alchemy\": true,\n  \"highResolution\": true,\n  \"highContrast\": false,\n  \"fantasyAvatar\": false,\n  \"expandedDomain\": true,\n  \"promptMagic\": false,\n  \"public\": false,\n  \"ultra\": {{ $('Leonardo Settings').item.json.ultra }},\n  \"photoReal\": false,\n  \"enhancePrompt\": true,\n  \"negative_prompt\": \"\",\n  \"init_generation_image_id\": \"{{ $('Leo - Get imageId').item.json.body.generations_by_pk.generated_images[0].id }}\",\n  \"init_strength\": 0.2\n} ",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "a18d721e-2377-445b-8116-c1e71c6f78b1",
      "name": "Leo - Generate Image1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5520,
        2384
      ],
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "maxTries": 5,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "=https://cloud.leonardo.ai/api/rest/v1/generations/{{ $json.body.sdGenerationJob.generationId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "e8a196db-6240-4f62-b174-01618256df93",
      "name": "Leo - Get imageId1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5920,
        2384
      ]
    },
    {
      "parameters": {
        "amount": 70
      },
      "id": "166e8837-989d-4820-95b5-5d23fbf143b3",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5728,
        2384
      ],
      "webhookId": "f5ecb1b2-47f3-4d83-bb85-33d956375b5a"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dab6e535-4ebc-4fc6-84b6-52b580e8d868",
              "name": "content",
              "value": "={{ $json.body.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2864,
        2144
      ],
      "id": "8758c255-f73b-46a0-ac48-767ff9cd204f",
      "name": "Content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2cefaa8e-f1bd-4877-9217-696ad9e1eb90",
              "name": "body.content",
              "value": "={{ $('Final Article').item.json.final_article }}",
              "type": "string"
            },
            {
              "id": "5c206437-e40f-408b-85bf-74668ed07e25",
              "name": "body.post_id",
              "value": "={{ $('Post on Wordpress').item.json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2864,
        1904
      ],
      "id": "8f888de8-4182-4858-8c35-6db01bd12161",
      "name": "Content Buffer"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create an image prompt based on this content:\n{{ $('Content').item.json.content }}\n\nCreate a new image prompt that continues the theme and style of initial image.\n\nThis is the prompt for the initial image:\n{{ $('Image Prompt Generator').item.json.output.image_prompt }}\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a successful image prompt generator. \n\nConsider the photo style and angle of the camera as well as the lighting that is suitable for the image and content. \n\nRemove all symbols or hashtags from the final image prompt. \n\nMake sure there is no text in the final image.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        5168,
        2384
      ],
      "id": "816d4811-21f2-483a-8731-dec0ab6eb42c",
      "name": "Image Prompt Generator1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd496890-464e-4f96-8cfe-d1795faee713",
              "name": "body.generations_by_pk.generated_images[0].url",
              "value": "={{ $json.url || $json.body.generations_by_pk.generated_images[0].url }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4624,
        2144
      ],
      "id": "c433e3ca-fdbd-460b-979c-53d007f3d0f2",
      "name": "Image URL"
    },
    {
      "parameters": {
        "jsCode": "return $json.body.generations_by_pk.generated_images.map(img => ({\n    url: img.url,\n    id: img.id\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6128,
        2384
      ],
      "id": "1d0ed661-e045-4353-8b9c-ed3df962500b",
      "name": "Split"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        8752,
        2704
      ],
      "id": "50b5bbe0-abe3-444d-8f2c-d8d8024f8fd2",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "url": "={{ $json.body.generations_by_pk.generated_images[0].url }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6528,
        2384
      ],
      "id": "5977d46a-fb3b-45ab-864e-e892c139fdbe",
      "name": "Download Image1"
    },
    {
      "parameters": {
        "name": "={{ $json.id || $json.body.generations_by_pk.generated_images[0].id }}.jpg",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "={{ $('Create Article Folder').first().json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        6720,
        2384
      ],
      "id": "c93e2068-e8ae-49f2-8667-883d09382c97",
      "name": "UPLOAD1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd496890-464e-4f96-8cfe-d1795faee713",
              "name": "body.generations_by_pk.generated_images[0].url",
              "value": "={{ $json.url || $json.body.generations_by_pk.generated_images[0].url }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6320,
        2384
      ],
      "id": "0157a7ee-dcb7-45ca-ba89-7041c973c78c",
      "name": "Image URL1"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Define the retry count (coming from a previous node or set manually)\nconst retryCount = $json[\"retryCount\"] || 0;  // If not present, default to 0\nconst maxRetries = 10;  // Define the maximum number of retries\nconst initialDelay = 30;  // Initial delay in seconds (1 second)\n\n// If the retry count is less than the max retries, calculate the delay\nif (retryCount < maxRetries) {\n    const currentDelayInSeconds = initialDelay * Math.pow(2, retryCount);  // Exponential backoff delay in seconds\n    \n    // Log the delay time for debugging\n    console.log(`Waiting for ${currentDelayInSeconds} seconds before retry...`);\n    \n    return {\n        json: {\n            retryCount: retryCount + 1,  // Increment retry count\n            waitTimeInSeconds: currentDelayInSeconds, // Pass the delay time in seconds\n            status: 'retrying',\n        }\n    };\n} else {\n    // If max retries are exceeded, return a failure response\n    return {\n        json: {\n            error: 'Max retries exceeded',\n            retryCount: retryCount,\n            status: 'failed'\n        }\n    };\n}\n"
      },
      "id": "d0ead0d0-eb95-4265-bbbc-8f54b3920062",
      "name": "Exponential Backoff",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5728,
        2704
      ]
    },
    {
      "parameters": {
        "errorMessage": "Google Sheets API Limit has been triggered and the workflow has stopped"
      },
      "id": "895f2c65-fa7f-47ba-80f3-eb19bf91c6ac",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        6320,
        2704
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "51e191cb-af20-423b-9303-8523caa4ae0d",
              "leftValue": "={{ $('Exponential Backoff').item.json[\"retryCount\"] }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3891fcdf-bc9c-4927-b5ad-f19a428a3678",
      "name": "Check Max Retries",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6128,
        2704
      ]
    },
    {
      "parameters": {
        "amount": "={{ $json[\"waitTimeInSeconds\"] }}"
      },
      "id": "b495bea0-d2e1-48b1-a8f6-1ce477721a3a",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5920,
        2704
      ],
      "webhookId": "37e02c3e-6b13-427d-a4b5-d2b4cd414042"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://cloud.leonardo.ai/api/rest/v1/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"width\": 1536,\n  \"height\": 864,\n  \"modelId\": \"{{ $('Leonardo Settings').first().json.model }}\",\n  \"num_images\": 2,\n  \"presetStyle\": \"{{ $('PRESETS - Random').item.json.preset }}\",\n  \"prompt\": \"{{ $json.output.image_prompt }}}; DO NOT INCLUDE ANY WORDS OR LABELS.\",\n  \"alchemy\": true,\n  \"highResolution\": true,\n  \"highContrast\": false,\n  \"fantasyAvatar\": false,\n  \"expandedDomain\": true,\n  \"promptMagic\": false,\n  \"public\": false,\n  \"ultra\": {{ $('Leonardo Settings').item.json.ultra }},\n  \"photoReal\": false,\n  \"enhancePrompt\": true,\n  \"negative_prompt\": \"\",\n  \"init_generation_image_id\": \"{{ $('Leo - Get imageId1').item.json.body.generations_by_pk.generated_images[0].id }}\",\n  \"init_strength\": 0.2\n} ",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "e93ce6f2-9e38-4f8f-ba74-4b804a84e7de",
      "name": "Leo - Generate Image2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7344,
        2704
      ],
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "maxTries": 5,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "=https://cloud.leonardo.ai/api/rest/v1/generations/{{ $json.body.sdGenerationJob.generationId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "708b0820-1260-4dbe-8bee-c0bc0652a0c1",
      "name": "Leo - Get imageId2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7744,
        2704
      ]
    },
    {
      "parameters": {
        "amount": 70
      },
      "id": "07fc6358-f903-4958-acea-eb7f948c9f59",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7552,
        2704
      ],
      "webhookId": "1c4d9f11-7bd4-4d04-9487-d74207fb9654"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create an image prompt based on this content:\n{{ $('Content').item.json.content }}\n\nCreate a new image prompt that continues the theme and style of initial image.\n\nThis is the prompt for the initial image:\n{{ $('Image Prompt Generator1').item.json.output.image_prompt }}\n\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a successful image prompt generator. \n\nConsider the photo style and angle of the camera as well as the lighting that is suitable for the image and content. \n\nRemove all symbols or hashtags from the final image prompt. \n\nMake sure there is no text in the final image.\n\n{{ $('Set Airtable Fields for Agents').item.json.Guidelines }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        6992,
        2704
      ],
      "id": "2381f442-5db0-47d0-8451-21fb676c3452",
      "name": "Image Prompt Generator2"
    },
    {
      "parameters": {
        "jsCode": "return $json.body.generations_by_pk.generated_images.map(img => ({\n    url: img.url,\n    id: img.id\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7952,
        2704
      ],
      "id": "96fd221b-764b-4c23-b7b0-d1a649a41692",
      "name": "Split1"
    },
    {
      "parameters": {
        "url": "={{ $json.body.generations_by_pk.generated_images[0].url }}",
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8352,
        2704
      ],
      "id": "3415b31d-5855-4083-a218-6b0bd59d5592",
      "name": "Download Image2"
    },
    {
      "parameters": {
        "name": "={{ $json.id || $json.body.generations_by_pk.generated_images[0].id }}.jpg",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "={{ $('Create Article Folder').first().json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        8544,
        2704
      ],
      "id": "98c1194c-21d7-4c64-99d8-462d794867d4",
      "name": "UPLOAD2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd496890-464e-4f96-8cfe-d1795faee713",
              "name": "body.generations_by_pk.generated_images[0].url",
              "value": "={{ $json.url || $json.body.generations_by_pk.generated_images[0].url }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8144,
        2704
      ],
      "id": "3ea09cdb-69f3-41a6-9bf3-be65e8a28b39",
      "name": "Image URL2"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Define the retry count (coming from a previous node or set manually)\nconst retryCount = $json[\"retryCount\"] || 0;  // If not present, default to 0\nconst maxRetries = 10;  // Define the maximum number of retries\nconst initialDelay = 30;  // Initial delay in seconds (1 second)\n\n// If the retry count is less than the max retries, calculate the delay\nif (retryCount < maxRetries) {\n    const currentDelayInSeconds = initialDelay * Math.pow(2, retryCount);  // Exponential backoff delay in seconds\n    \n    // Log the delay time for debugging\n    console.log(`Waiting for ${currentDelayInSeconds} seconds before retry...`);\n    \n    return {\n        json: {\n            retryCount: retryCount + 1,  // Increment retry count\n            waitTimeInSeconds: currentDelayInSeconds, // Pass the delay time in seconds\n            status: 'retrying',\n        }\n    };\n} else {\n    // If max retries are exceeded, return a failure response\n    return {\n        json: {\n            error: 'Max retries exceeded',\n            retryCount: retryCount,\n            status: 'failed'\n        }\n    };\n}\n"
      },
      "id": "3d6427ec-67f5-4983-8691-109c27c54b74",
      "name": "Exponential Backoff1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7552,
        3024
      ]
    },
    {
      "parameters": {
        "errorMessage": "Google Sheets API Limit has been triggered and the workflow has stopped"
      },
      "id": "2fd391cb-5db4-44e3-889e-0791cfa92e29",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        8144,
        3024
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "51e191cb-af20-423b-9303-8523caa4ae0d",
              "leftValue": "={{ $('Exponential Backoff1').item.json[\"retryCount\"] }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "45a48fe6-45e3-4538-8602-c23bd1851249",
      "name": "Check Max Retries1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7952,
        3024
      ]
    },
    {
      "parameters": {
        "amount": "={{ $json[\"waitTimeInSeconds\"] }}"
      },
      "id": "761a7677-0f84-4d8f-9bfe-bf8086f5ff65",
      "name": "Wait4",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7744,
        3024
      ],
      "webhookId": "0fc88e39-784a-48be-bd77-9c190169106d"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        2880,
        2464
      ],
      "id": "68d21d72-8468-47ba-9dc4-f93a72db3645",
      "name": "Anthropic Chat Model3"
    },
    {
      "parameters": {
        "content": "## Leonardo.ai Style Presets:\n\nANIME, CREATIVE, DYNAMIC, ENVIRONMENT, GENERAL, ILLUSTRATION, PHOTOGRAPHY, RAYTRACED, RENDER_3D, SKETCH_BW, SKETCH_COLOR, or NONE\n\n### The node below is currently set to select a random Preset.",
        "height": 540,
        "width": 400,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3728,
        1808
      ],
      "typeVersion": 1,
      "id": "0fca8205-6e04-49bf-b283-5644520e705c",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "content": "## Configure the Leonardo.ai image generation settings",
        "height": 540,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3408,
        1808
      ],
      "typeVersion": 1,
      "id": "f0bb5c68-027f-42ca-ab76-b448f5824a60",
      "name": "Sticky Note25"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        5024,
        2640
      ],
      "id": "8bcacaeb-26a1-4950-bfba-93ba0933621b",
      "name": "Anthropic Chat Model4"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        5184,
        2640
      ],
      "id": "07059ca9-b8fd-4715-950c-e513709b917f",
      "name": "Wikipedia3"
    },
    {
      "parameters": {
        "content": "## Exponential Backoff for APIs \n\nConnect these nodes to any API node such as the Google Sheets node example in this workflow",
        "height": 200,
        "width": 700,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5728,
        2560
      ],
      "typeVersion": 1,
      "id": "d491478f-b2c8-4ef9-98f0-a6258b406efc",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        6848,
        2960
      ],
      "id": "b1a6c0b7-f3c8-4f77-9072-a2f488725e97",
      "name": "Anthropic Chat Model5"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        7008,
        2960
      ],
      "id": "5c36c964-2575-40b7-a4f3-bf03e72cfd10",
      "name": "Wikipedia4"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"image_prompt\": \"image prompt\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3312,
        2560
      ],
      "id": "fc42c00e-00b0-4aec-a297-e72f313c6589",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "content": "## Exponential Backoff for APIs \n\nConnect these nodes to any API node such as the Google Sheets node example in this workflow",
        "height": 200,
        "width": 700,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7552,
        2880
      ],
      "typeVersion": 1,
      "id": "29748bd6-9494-4205-9f66-0f7b83edc183",
      "name": "Sticky Note27"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Brand Settings').first().json.wordpress_url }}/wp-json/wp/v2/media ",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Disposition",
              "value": "=attachment; filename=\"{{ $('Sets New Title Field').item.json.new_title }}.jpg\";"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "0344a50a-d7f3-45cd-b2e2-597d5fb0f27e",
      "name": "Upload media1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5024,
        2144
      ],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Brand Settings').first().json.wordpress_url }}/wp-json/wp/v2/posts/{{ $('Post on Wordpress').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "wordpressApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "featured_media",
              "value": "={{ $json.body.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d689e0f7-f07f-471a-aeb6-f22c4488cf46",
      "name": "Set image ID for the post1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5232,
        2144
      ],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        480,
        208
      ],
      "id": "b9954ab7-b1df-4dc0-918f-3f8c60ab5d0c",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "mode": "markdownToHtml",
        "markdown": "={{ $json.final_article }}",
        "options": {
          "simplifiedAutoLink": true,
          "completeHTMLDocument": false,
          "emoji": true,
          "headerLevelStart": 2
        }
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        1504,
        1472
      ],
      "id": "74679530-0744-457d-8510-78b73fd62e33",
      "name": "Markdown"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "={{ $json.base_id }}",
          "mode": "id"
        },
        "table": {
          "__rl": true,
          "value": "tblsMEodEn9hBGiHx",
          "mode": "list",
          "cachedResultName": "Brand Guidelines",
          "cachedResultUrl": "https://airtable.com/appvk87mtcwRve5p5/tblsMEodEn9hBGiHx"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        288,
        208
      ],
      "id": "a47cc9ce-76b4-4c91-933f-46bda1d6686f",
      "name": "GET Brand Guidelines",
      "credentials": {
        "airtableTokenApi": {
          "id": "dGvN31oQ0ywWKJuF",
          "name": "Airtable Moj token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0f76bbe4-e5db-4b60-83bc-9aebb28d5489",
              "leftValue": "={{ $json.Keyword }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "ede2a5fb-51ab-4489-aa94-84a4bf6bdff1",
              "leftValue": "={{ $json['Create Article'] }}",
              "rightValue": "Write Article",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        880,
        208
      ],
      "id": "0e90b381-934d-49df-9b22-1d7b1b8329d9",
      "name": "If"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"image_prompt\": \"image prompt\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        5344,
        2640
      ],
      "id": "62d50a95-7982-483e-8319-183fdc017570",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"image_prompt\": \"image prompt\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        7168,
        2960
      ],
      "id": "dde22d80-63ba-423c-9ce0-be0f8f07eb78",
      "name": "Structured Output Parser1"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Brand Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily search results": {
      "ai_tool": [
        [
          {
            "node": "SERPs, Writing, KWs, Insights",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Set Airtable Fields for Agents": {
      "main": [
        [
          {
            "node": "SERPs, Writing, KWs, Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set KWs and Insights fields": {
      "main": [
        [
          {
            "node": "Update Article Writer table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Refine the Title": {
      "main": [
        [
          {
            "node": "Sets New Title Field",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Key Takeaways": {
      "main": [
        [
          {
            "node": "Introduction Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Key Takeaways AI Agent": {
      "main": [
        [
          {
            "node": "Set Key Takeaways",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Introduction Field": {
      "main": [
        [
          {
            "node": "Outline Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Outline Agent": {
      "main": [
        [
          {
            "node": "Set Outline Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Outline Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Set Outline Fields": {
      "main": [
        [
          {
            "node": "Main Body Prompt Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Writer Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Introduction Agent": {
      "main": [
        [
          {
            "node": "Set Introduction Field",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Conclusion Writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Article Assembly Agent": {
      "main": [
        [
          {
            "node": "Final Edit Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Article Assembly Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Article Folder": {
      "main": [
        [
          {
            "node": "Create Doc Filename is title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "GDoc Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent Conclusion Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SERPs, Writing, KWs, Insights": {
      "main": [
        [
          {
            "node": "Set KWs and Insights fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sets New Title Field": {
      "main": [
        [
          {
            "node": "Update Article Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Article Title": {
      "main": [
        [
          {
            "node": "Key Takeaways AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open AI": {
      "ai_languageModel": [
        [
          {
            "node": "Refine the Title",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Key Takeaways": {
      "ai_languageModel": [
        [
          {
            "node": "Key Takeaways AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "Introduction Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Main Body Prompt Writer": {
      "main": [
        [
          {
            "node": "Content Writer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Main Body Prompt Writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Conclusion Writer": {
      "main": [
        [
          {
            "node": "Set Conclusion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Conclusion": {
      "main": [
        [
          {
            "node": "Article Assembly Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Final Edit Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Content Writer Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Final Edit Agent": {
      "main": [
        [
          {
            "node": "Final Article",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Final Article": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Doc Filename is title": {
      "main": [
        [
          {
            "node": "Add Final Article",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Final Article": {
      "main": [
        [
          {
            "node": "OpenAI Meta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Meta Description": {
      "main": [
        [
          {
            "node": "OpenAI Image Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Image Prompt": {
      "main": [
        [
          {
            "node": "Add Image Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Meta": {
      "main": [
        [
          {
            "node": "Add Meta Description",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Image Prompt": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "SERPs, Writing, KWs, Insights",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Set Airtable Fields for Agents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET - Article Writer": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Article Writer table": {
      "main": [
        [
          {
            "node": "Refine the Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GDoc Link": {
      "main": [
        [
          {
            "node": "ADD - GDoc URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ADD - GDoc URL": {
      "main": [
        [
          {
            "node": "Post on Wordpress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "POST Blog Info": {
      "main": [
        [
          {
            "node": "UPDATE Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "POST RankMath Info": {
      "main": [
        [
          {
            "node": "Content Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post on Wordpress": {
      "main": [
        [
          {
            "node": "POST RankMath Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Brand Settings": {
      "main": [
        [
          {
            "node": "GET Brand Guidelines",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia": {
      "ai_tool": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PRESETS - Random": {
      "main": [
        [
          {
            "node": "Leo - Generate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leonardo Settings": {
      "main": [
        [
          {
            "node": "PRESETS - Random",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leo - Generate Image": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leo - Get imageId": {
      "main": [
        [
          {
            "node": "Image URL",
            "type": "main",
            "index": 0
          },
          {
            "node": "Image Prompt Generator1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Upload media1",
            "type": "main",
            "index": 0
          },
          {
            "node": "UPLOAD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Leo - Get imageId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt Generator": {
      "main": [
        [
          {
            "node": "Leonardo Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leo - Generate Image1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Exponential Backoff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leo - Get imageId1": {
      "main": [
        [
          {
            "node": "Split",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Leo - Get imageId1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content": {
      "main": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Buffer": {
      "main": [
        [
          {
            "node": "Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt Generator1": {
      "main": [
        [
          {
            "node": "Leo - Generate Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image URL": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split": {
      "main": [
        [
          {
            "node": "Image URL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "POST Blog Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image1": {
      "main": [
        [
          {
            "node": "UPLOAD1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UPLOAD1": {
      "main": [
        [
          {
            "node": "Image Prompt Generator2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image URL1": {
      "main": [
        [
          {
            "node": "Download Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Exponential Backoff": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Max Retries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Max Retries": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Leo - Generate Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Check Max Retries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leo - Generate Image2": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Exponential Backoff1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leo - Get imageId2": {
      "main": [
        [
          {
            "node": "Split1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Leo - Get imageId2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt Generator2": {
      "main": [
        [
          {
            "node": "Leo - Generate Image2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split1": {
      "main": [
        [
          {
            "node": "Image URL2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image2": {
      "main": [
        [
          {
            "node": "UPLOAD2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UPLOAD2": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image URL2": {
      "main": [
        [
          {
            "node": "Download Image2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Exponential Backoff1": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Max Retries1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Max Retries1": {
      "main": [
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Leo - Generate Image2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Check Max Retries1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Image Prompt Generator1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia3": {
      "ai_tool": [
        [
          {
            "node": "Image Prompt Generator1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Image Prompt Generator2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia4": {
      "ai_tool": [
        [
          {
            "node": "Image Prompt Generator2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Image Prompt Generator",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Upload media1": {
      "main": [
        [
          {
            "node": "Set image ID for the post1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "GET - Article Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Markdown": {
      "main": [
        [
          {
            "node": "Create Article Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Brand Guidelines": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Image Prompt Generator1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Image Prompt Generator2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "05b8d268-0874-4fb6-a8e9-6099dfc8b767",
  "meta": {
    "instanceId": "bb871b4fae836450389627951cd9ceb06158f5e862b01ca3786b09269abe6b9a"
  },
  "id": "s6joYdtSAHQFegaq",
  "tags": [
    {
      "createdAt": "2025-07-10T14:41:30.749Z",
      "updatedAt": "2025-07-10T14:41:30.749Z",
      "id": "0LuZgaasyWxl6ISy",
      "name": "Current"
    }
  ]
}